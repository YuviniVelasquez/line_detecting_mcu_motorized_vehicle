###############################################################################
#
# IAR C/C++ Compiler V7.12.3.989/W32 for MSP430           04/Dec/2019  19:21:27
# Copyright 1996-2019 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 7.12
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        C:\Users\Dr Velasquez\Desktop\306\306_code\Project 10\init.c
#    Command line  =  
#        -f C:\Users\DRVELA~1\AppData\Local\Temp\EWA5EA.tmp ("C:\Users\Dr
#        Velasquez\Desktop\306\306_code\Project 10\init.c" -lC "C:\Users\Dr
#        Velasquez\Desktop\306\306_code\Project 10\Debug\List" -o "C:\Users\Dr
#        Velasquez\Desktop\306\306_code\Project 10\Debug\Obj" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR2355__ -e --double=32 --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 8.0\430\lib\dlib\dl430xlsfn.h" -I ./\
#        --core=430X --data_model=small -On --multiplier=32
#        --hw_workaround=CPU40 --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        C:\Users\Dr Velasquez\Desktop\306\306_code\Project
#        10\Debug\List\init.lst
#    Object file   =  
#        C:\Users\Dr Velasquez\Desktop\306\306_code\Project
#        10\Debug\Obj\init.r43
#
###############################################################################

C:\Users\Dr Velasquez\Desktop\306\306_code\Project 10\init.c
      1          //===========================================================================
      2          // File Name : init.c
      3          //
      4          // Description: This file contains the Initialization for all port pins
      5          //
      6          // Author: Yuvini Velasquez
      7          // Date: 9/11/19
      8          // Compiler: Built with IAR Embedded Workbench Version: V (7.12.4)
      9          //===========================================================================
     10          
     11          #include  "functions.h"
     12          #include  "msp430.h"
     13          #include <string.h>
     14          #include "macros.h"
     15          //variables
     16          extern char display_line[NUM_OF_ROWS][NUM_0F_COLS];
     17          extern volatile unsigned char update_display;
     18          extern volatile unsigned int update_display_count;
     19          extern char *display[NUM_OF_ROWS];
     20          

   \                                 In  segment CODE, align 2
     21          void Init_Conditions(void){
   \                     Init_Conditions:
   \   000000   0A12         PUSH.W  R10
     22          //------------------------------------------------------------------------------
     23            int i;
     24          
     25            for(i=START_COUNTER;i<NUM_0F_COLS ;i++){
   \   000002   0A43         MOV.W   #0x0, R10
   \                     ??Init_Conditions_0:
   \   000004   3A900B00     CMP.W   #0xb, R10
   \   000008   0A34         JGE     ??Init_Conditions_1
     26              display_line[DISPLAY_L1][i] = RESET_STATE;
   \   00000A   CA43....     MOV.B   #0x0, display_line(R10)
     27              display_line[DISPLAY_L2][i] = RESET_STATE;
   \   00000E   CA43....     MOV.B   #0x0, display_line + 11(R10)
     28              display_line[DISPLAY_L3][i] = RESET_STATE;
   \   000012   CA43....     MOV.B   #0x0, display_line + 22(R10)
     29              display_line[DISPLAY_L4][i] = RESET_STATE;
   \   000016   CA43....     MOV.B   #0x0, display_line + 33(R10)
     30            }
   \   00001A   1A53         ADD.W   #0x1, R10
   \   00001C   F33F         JMP     ??Init_Conditions_0
     31            display_line[DISPLAY_L1][END_OF_ARRAY] = RESET_STATE;
   \                     ??Init_Conditions_1:
   \   00001E   C243....     MOV.B   #0x0, &display_line + 10
     32            display_line[DISPLAY_L2][END_OF_ARRAY] = RESET_STATE;
   \   000022   C243....     MOV.B   #0x0, &display_line + 21
     33            display_line[DISPLAY_L3][END_OF_ARRAY] = RESET_STATE;
   \   000026   C243....     MOV.B   #0x0, &display_line + 32
     34            display_line[DISPLAY_L4][END_OF_ARRAY] = RESET_STATE;
   \   00002A   C243....     MOV.B   #0x0, &display_line + 43
     35          
     36            display[DISPLAY_L1] = &display_line[DISPLAY_L1][INIT_OF_ARRAY];
   \   00002E   B240........ MOV.W   #display_line, &display
     37            display[DISPLAY_L2] = &display_line[DISPLAY_L2][INIT_OF_ARRAY];
   \   000034   B240........ MOV.W   #display_line + 11, &display + 2
     38            display[DISPLAY_L3] = &display_line[DISPLAY_L3][INIT_OF_ARRAY];
   \   00003A   B240........ MOV.W   #display_line + 22, &display + 4
     39            display[DISPLAY_L4] = &display_line[DISPLAY_L4][INIT_OF_ARRAY];
   \   000040   B240........ MOV.W   #display_line + 33, &display + 6
     40            update_display = NO;
   \   000046   C243....     MOV.B   #0x0, &update_display
     41            update_display_count = NO;
   \   00004A   8243....     MOV.W   #0x0, &update_display_count
     42          // Interrupts are disabled by default, enable them.
     43            enable_interrupts();
   \   00004E   ........     CALLA   #enable_interrupts
     44          //------------------------------------------------------------------------------
     45          }
   \   000052   3A41         POP.W   R10
   \   000054   1001         RETA

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      6   Init_Conditions
        6   -> enable_interrupts


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      86  Init_Conditions

 
 86 bytes in segment CODE
 
 86 bytes of CODE memory

Errors: none
Warnings: none
